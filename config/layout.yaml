vars:
  root: build/
  dir: Hello
files:
  request:
    vars:
      some: some
    from: |
      <?php

      namespace {{ namespace }};

      use Illuminate\Foundation\Http\FormRequest;

      class {{ class }} extends FormRequest
      {
          /**
          * Determine if the user is authorized to make this request.
          */
          public function authorize(): bool
          {
              return true;
          }

          /**
          * Get the validation rules that apply to the request.
          *
          * @return array<string, \Illuminate\Contracts\Validation\ValidationRule|array<mixed>|string>
          */
          public function rules(): array
          {
              return [
                  //
              ];
          }
      }
    to: "{{ vars.root }}app/Http/Requests/{{ vars.dir }}/UpdateRequest.php"
    methods:
      - |
        /**
        * Get the dto from the request
        *
        * @return {{ files.dto }}
        */
        public function toDto(): {{ files.dto }}
        {
            return new {{ files.dto }};
        }

  dto:
    from: |
      <?php

      namespace {{ namespace }};

      class {{ class }}
      {
          public function toArray(): array
          {
              return [
                  //
              ];
          }
      }

    to: "{{ vars.root }}app/Http/DTOs/{{ vars.dir }}/UpdateDto.php"

  dto_test:
    skip: true
    from: |
      <?php

      namespace {{ namespace }};

      use Illuminate\Foundation\Testing\RefreshDatabase;
      use Illuminate\Foundation\Testing\WithFaker;
      use Tests\TestCase;

      class {{ class }} extends TestCase
      {
      }
    to: "{{ vars.root }}tests/Http/DTOs/{{ vars.dir }}/UpdateDtoTest.php"
    methods:
      - |
        public function testToArray(): void
        {
            $dto = new {{ files.dto }};
        }


  controller:
    from: |
      <?php

      namespace {{ namespace }};

      use App\Http\Controllers\Controller;
      use Illuminate\Http\Request;

      class {{ class }} extends Controller
      {
          //
      }

    to: "{{ vars.root }}app/Http/Controllers/{{ vars.dir }}/MainController.php"
    methods:
      - |
        /**
        * ....
        * @param {{ files.request }} $request
        */
        public function update({{ files.request }} $request)
        {
            $dto = $request->toDto();
            {{ files.model }}::updateByDto($dto);
        }
  controller_test:
    from: |
      <?php

      namespace {{ namespace }};

      use Illuminate\Foundation\Testing\RefreshDatabase;
      use Illuminate\Foundation\Testing\WithFaker;
      use Tests\TestCase;

      class {{ class }} extends TestCase
      {
      }
    to: "{{ vars.root }}tests/Http/Controllers/{{ vars.dir }}/MainControllerTest.php"
    methods:
      - |
        public function testUpdate(): void
        {
            $response = $this->get('/');

            $response->assertStatus(200);
        }

  model:
    from: |
      <?php

      namespace {{ namespace }};

      use Illuminate\Database\Eloquent\Factories\HasFactory;
      use Illuminate\Database\Eloquent\Model;

      class {{ class }} extends Model
      {
          use HasFactory;
      }

    to: "{{ vars.root }}app/Models/{{ vars.dir }}/Hello.php"
    methods:
      - |
        /**
        * ....
        *
        * @param {{ files.dto }} $dto
        */
        public static function updateByDto({{ files.dto }} $dto)
        {
            $data = $dto->toArray();
        }

  model_test:
    from: |
      <?php

      namespace {{ namespace }};

      use Illuminate\Foundation\Testing\RefreshDatabase;
      use Illuminate\Foundation\Testing\WithFaker;
      use Tests\TestCase;

      class {{ class }} extends TestCase
      {
      }
    to: "{{ vars.root }}tests/Models/{{ vars.dir }}/HelloTest.php"
    methods:
      - |
        public function testUpdate(): void
        {
            $dto = new {{ files.dto }};

            $model = {{ files.model }}::updateByDto($dto);
        }
